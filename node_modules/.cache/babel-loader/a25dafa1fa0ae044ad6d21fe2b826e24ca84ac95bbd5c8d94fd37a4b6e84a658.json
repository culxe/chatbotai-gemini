{"ast":null,"code":"var _jsxFileName = \"D:\\\\1. indi indi\\\\all projects\\\\ai-chatbot-hiringtest\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\n\n// Pastikan API Key sudah ada di .env file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(\"AIzaSyBRoLDddSyrDtvscgXCThgmun6_Un4nuxM\");\nconst model = genAI.getGenerativeModel({\n  model: \"gemini-1.5-flash\"\n});\nconst chat = model.startChat({\n  history: [{\n    role: \"user\",\n    parts: [{\n      text: \"Hello\"\n    }]\n  }, {\n    role: \"model\",\n    parts: [{\n      text: \"Great to meet you. What would you like to know?\"\n    }]\n  }]\n});\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: \"model\",\n    content: \"Great to meet you. What would you like to know?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSend = async () => {\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput(\"\");\n    setLoading(true);\n    try {\n      // Mengirim pesan ke Gemini API\n      const result = await chat.sendMessage(input);\n      const botMessage = {\n        role: \"model\",\n        content: result.response.text()\n      };\n\n      // Update state dengan pesan baru dari model\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error(\"Error generating response: \", error);\n      setMessages(prevMessages => [...prevMessages, {\n        role: \"model\",\n        content: \"Something went wrong. Please try again.\"\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col mx-80 h-screen bg-gray-50 border border-gray-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 border border-red-400 overflow-y-auto p-4 flex flex-col\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        // Mengatur warna kuning jika pesan kosong\n        className: `my-2 p-2 border rounded-lg max-w-xs ${msg.content.trim() === \"\" ? \"bg-yellow-400 text-black self-center\" // Warna kuning untuk pesan kosong\n        : msg.role === \"user\" ? \"bg-yellow-800 text-white self-end\" // Warna untuk pesan pengguna\n        : \"bg-gray-300 text-black self-start\" // Warna untuk pesan sistem\n        }`,\n        style: {\n          // Memastikan posisi elemen dengan alignSelf\n          alignSelf: msg.content.trim() === \"\" ? \"center\" : msg.role === \"user\" ? \"flex-end\" : \"flex-start\"\n        },\n        children: msg.content.trim() === \"\" ? \"Pesan kosong\" : msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NVNMIYNEWLpKtnzRq1IAKTKsXA0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleGenerativeAI","jsxDEV","_jsxDEV","genAI","model","getGenerativeModel","chat","startChat","history","role","parts","text","App","_s","messages","setMessages","content","input","setInput","loading","setLoading","handleSend","trim","userMessage","updatedMessages","result","sendMessage","botMessage","response","prevMessages","error","console","className","children","map","msg","index","style","alignSelf","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/1. indi indi/all projects/ai-chatbot-hiringtest/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\n\r\n// Pastikan API Key sudah ada di .env file\r\nconst genAI = new GoogleGenerativeAI(\"AIzaSyBRoLDddSyrDtvscgXCThgmun6_Un4nuxM\");\r\nconst model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\r\nconst chat = model.startChat({\r\n  history: [\r\n    {\r\n      role: \"user\",\r\n      parts: [{ text: \"Hello\" }],\r\n    },\r\n    {\r\n      role: \"model\",\r\n      parts: [{ text: \"Great to meet you. What would you like to know?\" }],\r\n    },\r\n  ],\r\n});\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([{ role: \"model\", content: \"Great to meet you. What would you like to know?\" }]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    const userMessage = { role: \"user\", content: input };\r\n    const updatedMessages = [...messages, userMessage];\r\n    setMessages(updatedMessages);\r\n    setInput(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Mengirim pesan ke Gemini API\r\n      const result = await chat.sendMessage(input);\r\n      const botMessage = { role: \"model\", content: result.response.text() };\r\n\r\n      // Update state dengan pesan baru dari model\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error(\"Error generating response: \", error);\r\n      setMessages((prevMessages) => [...prevMessages, { role: \"model\", content: \"Something went wrong. Please try again.\" }]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col mx-80 h-screen bg-gray-50 border border-gray-300\">\r\n      {/* Chat Window */}\r\n      <div className=\"flex-1 border border-red-400 overflow-y-auto p-4 flex flex-col\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            // Mengatur warna kuning jika pesan kosong\r\n            className={`my-2 p-2 border rounded-lg max-w-xs ${\r\n              msg.content.trim() === \"\"\r\n                ? \"bg-yellow-400 text-black self-center\" // Warna kuning untuk pesan kosong\r\n                : msg.role === \"user\"\r\n                ? \"bg-yellow-800 text-white self-end\" // Warna untuk pesan pengguna\r\n                : \"bg-gray-300 text-black self-start\" // Warna untuk pesan sistem\r\n            }`}\r\n            style={{\r\n              // Memastikan posisi elemen dengan alignSelf\r\n              alignSelf: msg.content.trim() === \"\" ? \"center\" : msg.role === \"user\" ? \"flex-end\" : \"flex-start\",\r\n            }}\r\n          >\r\n            {/* Menampilkan teks hanya jika tidak kosong */}\r\n            {msg.content.trim() === \"\" ? \"Pesan kosong\" : msg.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}