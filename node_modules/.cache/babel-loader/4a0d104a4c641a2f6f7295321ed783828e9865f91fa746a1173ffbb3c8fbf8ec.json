{"ast":null,"code":"var _jsxFileName = \"D:\\\\1. indi indi\\\\all projects\\\\ai-chatbot-hiringtest\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: \"system\",\n    content: \"You are a helpful assistant.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // API Key untuk Google Gemini (ganti dengan kunci API yang valid)\n  const genAI = new GoogleGenerativeAI(\"AIzaSyBRoLDddSyrDtvscgXCThgmun6_Un4nuxM\");\n  const model = genAI.getGenerativeModel({\n    model: \"gemini-1.5-flash\"\n  });\n  const handleSend = async () => {\n    if (input.trim() === \"\") return;\n\n    // Menambahkan pesan pengguna ke dalam state messages\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput(\"\");\n    setLoading(true); // Menandakan bahwa chatbot sedang memproses\n\n    try {\n      // Mengirimkan prompt ke API Gemini\n      const result = await model.generateContent(input);\n\n      // Mendapatkan respons dari API\n      const botMessage = {\n        role: \"assistant\",\n        content: result.response.text\n      };\n\n      // Memperbarui state dengan respons chatbot\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error(\"Error generating response: \", error);\n      setMessages(prevMessages => [...prevMessages, {\n        role: \"assistant\",\n        content: \"Something went wrong. Please try again.\"\n      }]);\n    } finally {\n      setLoading(false); // Menyelesaikan proses loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-3 rounded-lg max-w-xs ${msg.role === \"user\" ? \"bg-blue-500 text-white self-end\" : \"bg-gray-300 text-black self-start\"}`,\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-4 border-t bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"flex-1 p-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:ring-blue-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"ml-2 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\",\n        children: loading ? \"Sending...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Dq5x5g3jw9LX24ReUe13ZOxuuVQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleGenerativeAI","jsxDEV","_jsxDEV","App","_s","messages","setMessages","role","content","input","setInput","loading","setLoading","genAI","model","getGenerativeModel","handleSend","trim","userMessage","updatedMessages","result","generateContent","botMessage","response","text","prevMessages","error","console","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/1. indi indi/all projects/ai-chatbot-hiringtest/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([{ role: \"system\", content: \"You are a helpful assistant.\" }]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // API Key untuk Google Gemini (ganti dengan kunci API yang valid)\r\n  const genAI = new GoogleGenerativeAI(\"AIzaSyBRoLDddSyrDtvscgXCThgmun6_Un4nuxM\");\r\n  const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    // Menambahkan pesan pengguna ke dalam state messages\r\n    const userMessage = { role: \"user\", content: input };\r\n    const updatedMessages = [...messages, userMessage];\r\n    setMessages(updatedMessages);\r\n    setInput(\"\");\r\n    setLoading(true); // Menandakan bahwa chatbot sedang memproses\r\n\r\n    try {\r\n      // Mengirimkan prompt ke API Gemini\r\n      const result = await model.generateContent(input);\r\n\r\n      // Mendapatkan respons dari API\r\n      const botMessage = { role: \"assistant\", content: result.response.text };\r\n\r\n      // Memperbarui state dengan respons chatbot\r\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error(\"Error generating response: \", error);\r\n      setMessages((prevMessages) => [...prevMessages, { role: \"assistant\", content: \"Something went wrong. Please try again.\" }]);\r\n    } finally {\r\n      setLoading(false); // Menyelesaikan proses loading\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      {/* Chat Window */}\r\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`p-3 rounded-lg max-w-xs ${msg.role === \"user\" ? \"bg-blue-500 text-white self-end\" : \"bg-gray-300 text-black self-start\"}`}>\r\n            {msg.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input Section */}\r\n      <div className=\"flex items-center p-4 border-t bg-white\">\r\n        <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type your message...\" className=\"flex-1 p-2 border rounded-lg shadow-sm focus:outline-none focus:ring focus:ring-blue-400\" />\r\n        <button onClick={handleSend} className=\"ml-2 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\">\r\n          {loading ? \"Sending...\" : \"Send\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}